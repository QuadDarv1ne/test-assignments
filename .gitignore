# Байт-код / оптимизированные / DLL файлы
__pycache__/
*.py[cod]
*$py.class

# C расширения
*.so

# Дистрибутивы / упаковка
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
# Обычно эти файлы создаются менеджером пакетов, но если они редактируются вручную, лучше явно исключить их.
*.manifest
*.spec

# Логи установщика
pip-log.txt
pip-delete-this-directory.txt

# Отчеты о тестировании / покрытии
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Переводы
*.mo
*.pot

# Django
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask
instance/
.webassets-cache

# Scrapy
.scrapy

# Документация Sphinx
docs/_build/
doc/_build/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
# Согласно pypa/pipenv#598, рекомендуется включать Pipfile.lock в контроль версий.
# Однако, в случае совместной работы, если есть платформенно-специфичные зависимости или зависимости, не поддерживающие кросс-платформенность, pipenv может установить зависимости, которые не работают, или не установить все необходимые зависимости.
# Pipfile.lock

# PEP 582; используется, например, github.com/David-OConnor/pyflow
__pypackages__/

# Файл расписания Celery beat
celerybeat-schedule
celerybeat.pid

# Разобранные файлы SageMath
*.sage.py

# Окружения
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта Rope
.ropeproject

# Документация mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типов Pyre
.pyre/

# Анализатор статических типов pytype
.pytype/

# Символы отладки Cython
cython_debug/

# PyCharm
# Специфичная папка JetBrains
.idea/

# Виртуальное окружение
venv/

# Node.js
node_modules/

# macOS
.DS_Store

# Windows
Thumbs.db
ehthumbs.db
